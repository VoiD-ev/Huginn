/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SplashscreenImport } from './routes/splashscreen'
import { Route as LayoutAnimationImport } from './routes/_layoutAnimation'
import { Route as LayoutAnimationLayoutMainImport } from './routes/_layoutAnimation/_layoutMain'
import { Route as LayoutAnimationLayoutAuthImport } from './routes/_layoutAnimation/_layoutAuth'
import { Route as LayoutAnimationLayoutMainLayoutHomeImport } from './routes/_layoutAnimation/_layoutMain/_layoutHome'
import { Route as LayoutAnimationLayoutAuthRegisterImport } from './routes/_layoutAnimation/_layoutAuth/register'
import { Route as LayoutAnimationLayoutAuthLoginImport } from './routes/_layoutAnimation/_layoutAuth/login'
import { Route as LayoutAnimationLayoutMainLayoutHomeFriendsImport } from './routes/_layoutAnimation/_layoutMain/_layoutHome/friends'
import { Route as LayoutAnimationLayoutMainLayoutHomeChannelsmeImport } from './routes/_layoutAnimation/_layoutMain/_layoutHome/channels.@me'
import { Route as LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdImport } from './routes/_layoutAnimation/_layoutMain/_layoutHome/channels.@me.$channelId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SplashscreenRoute = SplashscreenImport.update({
  path: '/splashscreen',
  getParentRoute: () => rootRoute,
} as any)

const LayoutAnimationRoute = LayoutAnimationImport.update({
  id: '/_layoutAnimation',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutAnimationLayoutMainRoute = LayoutAnimationLayoutMainImport.update({
  id: '/_layoutMain',
  getParentRoute: () => LayoutAnimationRoute,
} as any)

const LayoutAnimationLayoutAuthRoute = LayoutAnimationLayoutAuthImport.update({
  id: '/_layoutAuth',
  getParentRoute: () => LayoutAnimationRoute,
} as any)

const LayoutAnimationLayoutMainLayoutHomeRoute =
  LayoutAnimationLayoutMainLayoutHomeImport.update({
    id: '/_layoutHome',
    getParentRoute: () => LayoutAnimationLayoutMainRoute,
  } as any)

const LayoutAnimationLayoutAuthRegisterRoute =
  LayoutAnimationLayoutAuthRegisterImport.update({
    path: '/register',
    getParentRoute: () => LayoutAnimationLayoutAuthRoute,
  } as any)

const LayoutAnimationLayoutAuthLoginRoute =
  LayoutAnimationLayoutAuthLoginImport.update({
    path: '/login',
    getParentRoute: () => LayoutAnimationLayoutAuthRoute,
  } as any)

const LayoutAnimationLayoutMainLayoutHomeFriendsRoute =
  LayoutAnimationLayoutMainLayoutHomeFriendsImport.update({
    path: '/friends',
    getParentRoute: () => LayoutAnimationLayoutMainLayoutHomeRoute,
  } as any)

const LayoutAnimationLayoutMainLayoutHomeChannelsmeRoute =
  LayoutAnimationLayoutMainLayoutHomeChannelsmeImport.update({
    path: '/channels/@me',
    getParentRoute: () => LayoutAnimationLayoutMainLayoutHomeRoute,
  } as any)

const LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute =
  LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdImport.update({
    path: '/$channelId',
    getParentRoute: () => LayoutAnimationLayoutMainLayoutHomeChannelsmeRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layoutAnimation': {
      id: '/_layoutAnimation'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAnimationImport
      parentRoute: typeof rootRoute
    }
    '/splashscreen': {
      id: '/splashscreen'
      path: '/splashscreen'
      fullPath: '/splashscreen'
      preLoaderRoute: typeof SplashscreenImport
      parentRoute: typeof rootRoute
    }
    '/_layoutAnimation/_layoutAuth': {
      id: '/_layoutAnimation/_layoutAuth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAnimationLayoutAuthImport
      parentRoute: typeof LayoutAnimationImport
    }
    '/_layoutAnimation/_layoutMain': {
      id: '/_layoutAnimation/_layoutMain'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAnimationLayoutMainImport
      parentRoute: typeof LayoutAnimationImport
    }
    '/_layoutAnimation/_layoutAuth/login': {
      id: '/_layoutAnimation/_layoutAuth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LayoutAnimationLayoutAuthLoginImport
      parentRoute: typeof LayoutAnimationLayoutAuthImport
    }
    '/_layoutAnimation/_layoutAuth/register': {
      id: '/_layoutAnimation/_layoutAuth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof LayoutAnimationLayoutAuthRegisterImport
      parentRoute: typeof LayoutAnimationLayoutAuthImport
    }
    '/_layoutAnimation/_layoutMain/_layoutHome': {
      id: '/_layoutAnimation/_layoutMain/_layoutHome'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAnimationLayoutMainLayoutHomeImport
      parentRoute: typeof LayoutAnimationLayoutMainImport
    }
    '/_layoutAnimation/_layoutMain/_layoutHome/friends': {
      id: '/_layoutAnimation/_layoutMain/_layoutHome/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof LayoutAnimationLayoutMainLayoutHomeFriendsImport
      parentRoute: typeof LayoutAnimationLayoutMainLayoutHomeImport
    }
    '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me': {
      id: '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me'
      path: '/channels/@me'
      fullPath: '/channels/@me'
      preLoaderRoute: typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeImport
      parentRoute: typeof LayoutAnimationLayoutMainLayoutHomeImport
    }
    '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me/$channelId': {
      id: '/_layoutAnimation/_layoutMain/_layoutHome/channels/@me/$channelId'
      path: '/$channelId'
      fullPath: '/channels/@me/$channelId'
      preLoaderRoute: typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdImport
      parentRoute: typeof LayoutAnimationLayoutMainLayoutHomeChannelsmeImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LayoutAnimationRoute: LayoutAnimationRoute.addChildren({
    LayoutAnimationLayoutAuthRoute: LayoutAnimationLayoutAuthRoute.addChildren({
      LayoutAnimationLayoutAuthLoginRoute,
      LayoutAnimationLayoutAuthRegisterRoute,
    }),
    LayoutAnimationLayoutMainRoute: LayoutAnimationLayoutMainRoute.addChildren({
      LayoutAnimationLayoutMainLayoutHomeRoute:
        LayoutAnimationLayoutMainLayoutHomeRoute.addChildren({
          LayoutAnimationLayoutMainLayoutHomeFriendsRoute,
          LayoutAnimationLayoutMainLayoutHomeChannelsmeRoute:
            LayoutAnimationLayoutMainLayoutHomeChannelsmeRoute.addChildren({
              LayoutAnimationLayoutMainLayoutHomeChannelsmeChannelIdRoute,
            }),
        }),
    }),
  }),
  SplashscreenRoute,
})

/* prettier-ignore-end */
